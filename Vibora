from turtle import *
from random import randrange
from freegames import square, vector
from random import choice

#Lista de colores para la serpiente y la comida, excepto rojo
colors = ['blue', 'green', 'purple', 'yellow', 'orange']

food = vector(0, 0)
snake = [vector(10, 0)]
aim = vector(0, -10)

def change(x, y):
    "Change snake direction."
    aim.x = x
    aim.y = y

def inside(head):
    "Return True if head inside boundaries."
    return -200 < head.x < 190 and -200 < head.y < 190

def move_food():
   """Move food randomly one step."""
new_food = food + vector(choice([-10, 10]), choice([-10, 10]))

#Si la nueva posición está dentro de los límites de la ventana, actualiza posición de comida
if inside(new_food):
        food.x = new_food.x
        food.y = new_food.y

"""Llama esta función de nuevo después de un tiempo aleatorio entre 0.1 y 0.5 segundos"""
ontimer(move_food, randrange(100, 500))

def move():
    "Move snake forward one segment."
    head = snake[-1].copy()
    head.move(aim)

    if not inside(head) or head in snake:
        square(head.x, head.y, 9, 'red')
        update()
        return

    snake.append(head)

    if head == food:
        print('Snake:', len(snake))
        """Elige un color aleatorio para la comida que sea diferente al color actual de la serpiente"""
        food_color = choice([color for color in colors if color != snake_color])
        food.x = randrange(-15, 15) * 10
        food.y = randrange(-15, 15) * 10
    else:
        snake.pop(0)
        
        clear()
        for body in snake:
        # Usa el mismo color para todas las partes del cuerpo de la serpiente
            square(body.x, body.y, 9, snake_color)


#Elige un color aleatorio para la serpiente que sea diferente al color actual de la comida
snake_color = choice([color for color in colors if color != 'red'])

#Starting position of food.
#food.x = randrange(-15, 15) * 10
#food.y = randrange(-15, 15) * 10

setup(420, 420, 370, 0)
hideturtle()
tracer(False)
listen()

#Reduced speed of snake.
onkey(lambda: change(8, 0), 'Right')
onkey(lambda: change(-8, 0), 'Left')
onkey(lambda: change(0, 8), 'Up')
onkey(lambda: change(0, -8), 'Down')

#Start random movement of food.
move_food()

move()
done()